%% «адание последующих значений
% Ўаги
del_alph = input('изменение угла атаки, град: '); % изменение угла атаки
del_gamma_a = input('изменение угла крена, град: '); % изменение угла крена
del_c_xa = input('изменение коэффициента лобового сопротивлени€: '); % изменение коэффициента лобового сопротивлени€
del_c_ya = input('изменение коэффициента подъемной силы: '); % изменение коэффициента подъемной силы
%  онстанты
Sigma = input('углова€ скорость собственного вращени€ «емли, с-1: '); % углова€ скорость собственного вращени€ «емли, с-1
R_e = input('экваториальный радиус, м: '); % экваториальный радиус, м
R_r = input('пол€рный радиус, м: '); % пол€рный радиус, м
gamma_z = input('гравитационна€ посто€нна€ «емли, км^3/c^2: '); % гравитационна€ посто€нна€ «емли, км^3/c^2
a = input('скорость звука, м/с: '); % скорость звука, м/с
P_spec = input('удельный вектор т€ги, кг*м/с^2: '); % удельный вектор т€ги, кг*м/с^2
% ”правл€ющие воздействи€
%alph = alph+del_alph; % угол атаки, град
gamma_a = gamma_a+del_gamma_a; % угол крена, град
% «ависимость коэффициентов от угла атаки alph
%c_xa = c_xa + del_c_xa;
%c_ya = c_ya + del_c_ya;
% ѕеременные
beth = input('массовый расход топлива, кг/с: '); % массовый расход топлива, кг/с
b = input('сторона треугольника, м: '); % сторона треугольника, м
M = ones(1,length(alph));
M(:) = input('число маха: ');
dV0 = a*M(i); % текуща€ скорость, м/с
dtheta0 = X(end,2); % угол наклона траектории, град
dhi0 = X(end,3); % угол пути, град
dR0 = X(end,4); % радиус-вектор, начало отсчета - центр «емли, град
dphi0 = X(end,5); % географическа€ широта, град
dlambda0 = X(end,6); % географическа€ долгота, град
dm0 = X(end,7); % масса, кг
% time_interval_for_plot = (time_interval(end):0.1:time_interval(end)+10); % с
% time_interval_for_plot = (time_interval_for_plot(end):0.1:time_interval_for_plot(end)+10); % с
% time_interval_for_plot = (10:0.1:20); % с
% time_interval_for_plot = (0:0.1:10); % с
% time_interval_for_plot = (time_interval_for_plot(end)+0.1:0.1:time_interval_for_plot(end)+20); % с
start_cond = [dV0; dtheta0; dhi0; dR0; dphi0; dlambda0; dm0];
g_r = (gamma_z./dR0.^2)*(1+0.00162*(R_e./dR0).^2*(1-3*(sind(dphi0)).^2)); % радиальна€ составл€юща€, м/с^2
g_z = -0.00162*gamma_z*R_e.^4.*sind(2*dphi0)./dR0.^4; % трансверсальна€ составл€юща€, м/с^2
